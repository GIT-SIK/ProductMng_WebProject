<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.ProductMng.item.ItemDAO">
    <!-- 상품 정보 저장 -->
    <insert id="insertItem" parameterType="java.util.Map">
        INSERT INTO T_ITEM_DTL (
            ITEM_NM,
            ITEM_TYPE_CD,
            ITEM_TYPE_NM,
            ITEM_PRICE,
            CREATE_DT,
            UPDATE_DT
        ) VALUES (
            #{itemNm},
            #{itemTypeCd},
            #{itemTypeNm},
            #{itemPrice},
            NOW(),
            NOW()
        )
    </insert>

    <!-- 상품 조회 -->
    <select id="getItemList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            BAR_CODE,
            ITEM_NM,
            ITEM_TYPE_CD,
            ITEM_TYPE_NM,
            ITEM_PRICE
        FROM T_ITEM_DTL
        WHERE 1=1
        <if test="itemTypeCd != null and itemTypeCd != ''">
            AND ITEM_TYPE_CD = #{itemTypeCd}
        </if>
        <if test="itemNm != null and itemNm != ''">
            AND ITEM_NM LIKE CONCAT('%', #{itemNm}, '%')
        </if>
        <if test="barCode != null and barCode != ''">
            AND BAR_CODE = #{barCode}
        </if>
        <if test="page != null and pageSize != null">
            LIMIT #{pageNum}, #{pageSize}
        </if>
    </select>

    <!-- 상품 총 개수 조회 -->
    <select id="getItemListTotal" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
            COUNT(1)
        FROM T_ITEM_DTL
        WHERE 1=1
        <if test="itemTypeCd != null and itemTypeCd != ''">
            AND ITEM_TYPE_CD = #{itemTypeCd}
        </if>
        <if test="itemNm != null and itemNm != ''">
            AND ITEM_NM LIKE CONCAT('%', #{itemNm}, '%')
        </if>
        <if test="barCode != null and barCode != ''">
            AND BAR_CODE = #{barCode}
        </if>
    </select>

    <select id="getItemTypeList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            *
        FROM T_CODE_MST
        WHERE 1=1
        AND UP_CODE_CD = 'ITEM_TYPE'
        ORDER BY CODE_ORDER_BY DESC
    </select>

    <select id="getSupplierList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            *
        FROM T_CODE_MST
        WHERE 1=1
        AND UP_CODE_CD = 'SUPPLIER'
        ORDER BY CODE_ORDER_BY DESC
    </select>

    <insert id="uploadItem" parameterType="java.util.Map">
        INSERT INTO T_ITEM_DTL (
            BAR_CODE,
            ITEM_NM,
            ITEM_TYPE_CD,
            ITEM_TYPE_NM,
            ITEM_PRICE,
            CREATE_DT,
            UPDATE_DT
        ) VALUES (
             #{BAR_CODE},
             #{ITEM_NM},
             #{ITEM_TYPE_CD},
             #{ITEM_TYPE_NM},
             #{ITEM_PRICE},
             NOW(),
             NOW()
         ) ON DUPLICATE KEY UPDATE
            ITEM_TYPE_CD = #{ITEM_TYPE_CD},
            ITEM_TYPE_NM = #{ITEM_TYPE_NM},
            ITEM_PRICE = #{ITEM_PRICE},
            UPDATE_DT = NOW()
    </insert>

    <delete id="deleteItem" parameterType="java.util.List">
        DELETE FROM T_ITEM_DTL
        WHERE 1=1
        <foreach collection="list" item="item" separator=" OR " open=" AND (" close=")">
            BAR_CODE = #{item.BAR_CODE}
        </foreach>
    </delete>

    <select id="getItemStockList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DATE_FORMAT(STOCK.STOCK_DT, '%Y-%m-%d') AS STOCK_DT,
            STOCK.BAR_CODE,
            STOCK.ITEM_NM,
            STOCK.SUPPLIER_CD,
            STOCK.SUPPLIER,
            STOCK.ITEM_TYPE_CD,
            STOCK.ITEM_TYPE_NM,
            STOCK.PURCHASE_PRICE,
            STOCK.IN_CNT,
            STOCK.REMAIN_CNT,
            DTL.ITEM_PRICE
        FROM T_ITEM_STOCK AS STOCK
        LEFT JOIN T_ITEM_DTL AS DTL ON STOCK.BAR_CODE = DTL.BAR_CODE
        WHERE 1=1
        <if test="startDt != null and startDt != ''">
            AND STOCK.STOCK_DT BETWEEN REPLACE(#{startDt}, '-', '') AND REPLACE(#{endDt}, '-', '')
        </if>
        <if test="itemTypeCd != null and itemTypeCd != ''">
            AND STOCK.ITEM_TYPE_CD = #{itemTypeCd}
        </if>
        <if test="supplierCd != null and supplierCd != ''">
            AND STOCK.SUPPLIER_CD = #{supplierCd}
        </if>
        <if test="itemNm != null and itemNm != ''">
            AND STOCK.ITEM_NM LIKE CONCAT('%', #{itemNm}, '%')
        </if>
        <if test="barCode != null and barCode != ''">
            AND STOCK.BAR_CODE = #{barCode}
        </if>
        ORDER BY STOCK_DT DESC, SUPPLIER_CD ASC
        <if test="page != null and pageSize != null">
            LIMIT #{pageNum}, #{pageSize}
        </if>
    </select>

    <select id="getItemStockListTotal" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
            COUNT(1)
        FROM T_ITEM_STOCK
        WHERE 1=1
        <if test="startDt != null and startDt != ''">
            AND STOCK_DT BETWEEN REPLACE(#{startDt}, '-', '') AND REPLACE(#{endDt}, '-', '')
        </if>
        <if test="itemTypeCd != null and itemTypeCd != ''">
            AND ITEM_TYPE_CD = #{itemTypeCd}
        </if>
        <if test="supplierCd != null and supplierCd != ''">
            AND SUPPLIER_CD = #{supplierCd}
        </if>
        <if test="itemNm != null and itemNm != ''">
            AND ITEM_NM LIKE CONCAT('%', #{itemNm}, '%')
        </if>
        <if test="barCode != null and barCode != ''">
            AND BAR_CODE = #{barCode}
        </if>
    </select>

    <insert id="uploadItemStock" parameterType="java.util.Map">
        INSERT INTO T_ITEM_STOCK (
            STOCK_DT,
            BAR_CODE,
            ITEM_NM,
            SUPPLIER_CD,
            SUPPLIER,
            ITEM_TYPE_CD,
            ITEM_TYPE_NM,
            PURCHASE_PRICE,
            IN_CNT,
            CREATE_DT,
            UPDATE_DT
        ) VALUES (
             #{STOCK_DT},
             #{BAR_CODE},
             #{ITEM_NM},
             #{SUPPLIER_CD},
             #{SUPPLIER},
             #{ITEM_TYPE_CD},
             #{ITEM_TYPE_NM},
             #{PURCHASE_PRICE},
             #{IN_CNT},
             NOW(),
             NOW()
         ) ON DUPLICATE KEY UPDATE
            PURCHASE_PRICE = #{PURCHASE_PRICE},
            IN_CNT = #{IN_CNT},
            UPDATE_DT = NOW()
    </insert>

    <select id="getItemSellList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            DATE_FORMAT(START_DT, '%Y-%m-%d') AS START_DT,
            DATE_FORMAT(END_DT, '%Y-%m-%d') AS END_DT,
            BAR_CODE,
            ITEM_NM,
            SELL_CNT
        FROM T_ITEM_SELL
        WHERE 1=1
        <if test="itemNm != null and itemNm != ''">
            AND ITEM_NM LIKE CONCAT('%', #{itemNm}, '%')
        </if>
        <if test="barCode != null and barCode != ''">
            AND BAR_CODE = #{barCode}
        </if>
        <if test="page != null and pageSize != null">
            LIMIT #{pageNum}, #{pageSize}
        </if>
    </select>

    <select id="getItemSellListTotal" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
            COUNT(1)
        FROM T_ITEM_SELL
        WHERE 1=1
        <if test="itemNm != null and itemNm != ''">
            AND ITEM_NM LIKE CONCAT('%', #{itemNm}, '%')
        </if>
        <if test="barCode != null and barCode != ''">
            AND BAR_CODE = #{barCode}
        </if>
    </select>

    <insert id="uploadItemSell" parameterType="java.util.Map">
        INSERT INTO T_ITEM_SELL (
            START_DT,
            END_DT,
            BAR_CODE,
            ITEM_NM,
            SELL_CNT
        ) VALUES (
             REPLACE(#{startDt}, '-', ''),
             REPLACE(#{endDt}, '-', ''),
             #{barCode},
             #{itemNm},
             #{sellCnt}
         ) ON DUPLICATE KEY UPDATE
            SELL_CNT = #{sellCnt}
    </insert>

    <select id="getItemSmartList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            S.BAR_CODE,
            S.ITEM_NM,
            DATE_FORMAT(S.STOCK_DT, '%Y-%M-%D') AS STOCK_DT,
            S.SUPPLIER_CD,
            S.SUPPLIER,
            DTL.ITEM_PRICE,
            S.ITEM_TYPE_CD,
            S.ITEM_TYPE_NM,
            M.MIN_PURCHASE_PRICE AS PURCHASE_PRICE,
            S.REMAIN_CNT
        FROM T_ITEM_STOCK S
        JOIN (
            SELECT
                BAR_CODE,
                MIN(PURCHASE_PRICE) AS MIN_PURCHASE_PRICE
            FROM T_ITEM_STOCK
            GROUP BY BAR_CODE
        ) AS M ON S.BAR_CODE = M.BAR_CODE
        JOIN T_ITEM_DTL AS DTL ON DTL.BAR_CODE = M.BAR_CODE
        WHERE 1 = 1
        AND S.PURCHASE_PRICE = M.MIN_PURCHASE_PRICE
        <if test="itemTypeCd != null and itemTypeCd != ''">
            AND S.ITEM_TYPE_CD = #{itemTypeCd}
        </if>
        <if test="supplierCd != null and supplierCd != ''">
            AND S.SUPPLIER_CD = #{supplierCd}
        </if>
        <if test="itemNm != null and itemNm != ''">
            AND S.ITEM_NM LIKE CONCAT('%', #{itemNm}, '%')
        </if>
        <if test="barCode != null and barCode != ''">
            AND S.BAR_CODE = #{barCode}
        </if>
        <if test="page != null and pageSize != null">
            LIMIT #{pageNum}, #{pageSize}
        </if>
    </select>

    <select id="getItemSmartListTotal" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
            COUNT(1)
        FROM T_ITEM_STOCK S
        JOIN (
            SELECT
                BAR_CODE,
                MIN(PURCHASE_PRICE) AS MIN_PURCHASE_PRICE
            FROM T_ITEM_STOCK
            GROUP BY BAR_CODE
        ) AS M ON S.BAR_CODE = M.BAR_CODE
        WHERE 1 = 1
        AND S.PURCHASE_PRICE = M.MIN_PURCHASE_PRICE
        <if test="itemTypeCd != null and itemTypeCd != ''">
            AND S.ITEM_TYPE_CD = #{itemTypeCd}
        </if>
        <if test="supplierCd != null and supplierCd != ''">
            AND S.SUPPLIER_CD = #{supplierCd}
        </if>
        <if test="itemNm != null and itemNm != ''">
            AND S.ITEM_NM LIKE CONCAT('%', #{itemNm}, '%')
        </if>
        <if test="barCode != null and barCode != ''">
            AND S.BAR_CODE = #{barCode}
        </if>
    </select>

    <update id="updateItem" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            UPDATE T_ITEM_DTL
            SET
                ITEM_NM = #{item.ITEM_NM},
                ITEM_TYPE_CD = #{item.ITEM_TYPE_CD},
                ITEM_TYPE_NM = #{item.ITEM_TYPE_NM},
                ITEM_PRICE = #{item.ITEM_PRICE},
                UPDATE_DT = NOW()
            WHERE BAR_CODE = #{item.BAR_CODE}
        </foreach>
    </update>

    <select id="getItemRemainList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            BAR_CODE,
            ITEM_NM,
            ITEM_TYPE_CD,
            ITEM_TYPE_NM,
            ITEM_PRICE,
            REMAIN_CNT
        FROM T_ITEM_DTL
        WHERE 1=1
        <if test="itemTypeCd != null and itemTypeCd != ''">
            AND ITEM_TYPE_CD = #{itemTypeCd}
        </if>
        <if test="itemNm != null and itemNm != ''">
            AND ITEM_NM LIKE CONCAT('%', #{itemNm}, '%')
        </if>
        <if test="barCode != null and barCode != ''">
            AND BAR_CODE = #{barCode}
        </if>
        <if test="page != null and pageSize != null">
            LIMIT #{pageNum}, #{pageSize}
        </if>
    </select>

</mapper>